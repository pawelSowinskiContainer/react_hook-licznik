{"ast":null,"code":"import _slicedToArray from \"/Users/pawelsowinski/Desktop/React/counter_hook/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/pawelsowinski/Desktop/React/counter_hook/src/Counter.js\";\nimport React, { useState } from 'react';\n\nconst Counter = () => {\n  const initValue = 100;\n\n  const _useState = useState(initValue),\n        _useState2 = _slicedToArray(_useState, 2),\n        counter = _useState2[0],\n        setCounter = _useState2[1];\n\n  const _useState3 = useState(1),\n        _useState4 = _slicedToArray(_useState3, 2),\n        step = _useState4[0],\n        setStep = _useState4[1];\n\n  const changeStep = e => {\n    let initValue = parseInt(e.target.value);\n    setStep(initValue);\n    return initValue;\n  };\n\n  return React.createElement(\"div\", {\n    className: \"counter\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Licznik\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, \"Stan licznika - \", React.createElement(\"span\", {\n    className: \"bold\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, counter)), React.createElement(\"button\", {\n    onClick: () => setCounter(counter + initValue),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"Dodaj \", step), React.createElement(\"button\", {\n    onClick: () => setCounter(initValue),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Reset\"), React.createElement(\"button\", {\n    onClick: () => setCounter(counter - initValue),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"Odejmij \", step), React.createElement(\"input\", {\n    type: \"number\",\n    onChange: changeStep,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }));\n};\n\nexport default Counter;","map":{"version":3,"sources":["/Users/pawelsowinski/Desktop/React/counter_hook/src/Counter.js"],"names":["React","useState","Counter","initValue","counter","setCounter","step","setStep","changeStep","e","parseInt","target","value"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAEpB,QAAMC,SAAS,GAAG,GAAlB;;AAFoB,oBAGUF,QAAQ,CAACE,SAAD,CAHlB;AAAA;AAAA,QAGbC,OAHa;AAAA,QAGJC,UAHI;;AAAA,qBAIIJ,QAAQ,CAAC,CAAD,CAJZ;AAAA;AAAA,QAIbK,IAJa;AAAA,QAIPC,OAJO;;AAOpB,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACxB,QAAIN,SAAS,GAAGO,QAAQ,CAACD,CAAC,CAACE,MAAF,CAASC,KAAV,CAAxB;AACAL,IAAAA,OAAO,CAACJ,SAAD,CAAP;AAEA,WAAOA,SAAP;AACD,GALD;;AAOE,SAEE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAmB;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAwBC,OAAxB,CAAnB,CAFF,EAGE;AAAQ,IAAA,OAAO,EAAE,MAAMC,UAAU,CAACD,OAAO,GAAGD,SAAX,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAA+DG,IAA/D,CAHF,EAIE;AAAQ,IAAA,OAAO,EAAE,MAAMD,UAAU,CAACF,SAAD,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJF,EAKE;AAAQ,IAAA,OAAO,EAAE,MAAME,UAAU,CAACD,OAAO,GAAGD,SAAX,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAAiEG,IAAjE,CALF,EAME;AAAO,IAAA,IAAI,EAAC,QAAZ;AAAqB,IAAA,QAAQ,EAAEE,UAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF;AAWH,CAzBD;;AA2BA,eAAeN,OAAf","sourcesContent":["import React, {useState} from 'react';\n\nconst Counter = () => {\n\n  const initValue = 100;\n  const [counter, setCounter] = useState(initValue);\n  const [step, setStep] = useState(1);\n\n\n  const changeStep = (e) => {\n    let initValue = parseInt(e.target.value);\n    setStep(initValue);\n    \n    return initValue\n  };\n\n    return (\n\n      <div className=\"counter\">\n        <h2>Licznik</h2>\n        <p>Stan licznika - <span className=\"bold\">{counter}</span></p>\n        <button onClick={() => setCounter(counter + initValue)}>Dodaj {step}</button>\n        <button onClick={() => setCounter(initValue)}>Reset</button>\n        <button onClick={() => setCounter(counter - initValue)}>Odejmij {step}</button>\n        <input type=\"number\" onChange={changeStep} />\n      </div>\n    )\n}\n\nexport default Counter;"]},"metadata":{},"sourceType":"module"}